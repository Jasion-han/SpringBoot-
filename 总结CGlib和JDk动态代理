简介：总结CGlib和JDk动态代理
    动态代理与静态代理相⽐较，最⼤的好处是接⼝中声明的所有⽅法都被转移到调⽤处理器⼀个集中的⽅法中处理，解耦和易维护




两种动态代理的区别：
    JDK动态代理：要求⽬标对象实现⼀个接⼝，但是有时候⽬标对象只是⼀个单独的对象,并没有实现任何的接⼝,这个时候就可以⽤CGLib动态代理
    CGLib动态代理,它是在内存中构建⼀个⼦类对象从⽽实现对⽬标对象功能的扩展
    JDK动态代理是⾃带的，CGlib需要引⼊第三⽅包
    CGLib动态代理基于继承来实现代理，所以⽆法对final类、private⽅法和static⽅法实现代理



Spring AOP中的代理使⽤的默认策略：
  如果⽬标对象实现了接⼝，则默认采⽤JDK动态代理
  如果⽬标对象没有实现接⼝，则采⽤CgLib进⾏动态代理
  如果⽬标对象实现了接扣，程序⾥⾯依旧可以指定使⽤CGlib动态代理
